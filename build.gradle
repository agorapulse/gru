/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2018-2025 Agorapulse.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'org.kordamp.gradle.groovy-project'
    id 'org.kordamp.gradle.checkstyle'
    id 'org.kordamp.gradle.codenarc'
    id 'org.kordamp.gradle.coveralls'
}

if (!project.hasProperty('mavenCentralUsername'))       ext.mavenCentralUsername            = System.getenv('MAVEN_CENTRAL_USERNAME') ?: '**UNDEFINED**'
if (!project.hasProperty('mavenCentralPassword'))       ext.mavenCentralPassword            = System.getenv('MAVEN_CENTRAL_PASSWORD') ?: '**UNDEFINED**'
if (!project.hasProperty('signingInMemoryKeyId'))       ext.signingInMemoryKeyId            = System.getenv('SIGNING_KEY_ID') ?: '**UNDEFINED**'
if (!project.hasProperty('signingInMemoryKeyPassword')) ext.signingInMemoryKeyPassword      = System.getenv('SIGNING_PASSWORD') ?: '**UNDEFINED**'
if (!project.hasProperty('signingInMemoryKey'))         ext.signingInMemoryKey              = System.getenv('SIGNING_SECRET_KEY_PATH') ? rootProject.file(System.getenv('SIGNING_SECRET_KEY_PATH')).text : '**UNDEFINED**'

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name = 'Gru'
        vendor = 'Agorapulse'
        description = 'HTTP Testing Framework'

        links {
            website = "https://github.com/${slug}"
            issueTracker = "https://github.com/${slug}/issues"
            scm = "https://github.com/${slug}.git"
        }

        people {
            person {
                id = 'musketyr'
                name = 'Vladimir Orany'
                roles = ['developer']
            }
        }

        repositories {
            repository {
                name = 'localRelease'
                url = "${project.rootProject.buildDir}/repos/local/release"
            }
            repository {
                name = 'localSnapshot'
                url = "${project.rootProject.buildDir}/repos/local/snapshot"
            }
        }
    }

    licensing {
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    publishing {
        enabled = false
        signing {
            enabled = false
        }
    }

    artifacts {
        source {
            enabled = false
        }
    }

    quality {
        checkstyle {
            toolVersion = '8.27'
            maxErrors = 12
        }

        codenarc {
            toolVersion = '1.5'
            maxPriority2Violations = 19
            maxPriority3Violations = 91
        }
    }

    coverage {
        coveralls {
            enabled = true
        }
    }

    docs {
        javadoc {
            enabled = false
            autoLinks {
                enabled = false
            }
            aggregate {
                enabled = false
            }
        }
        groovydoc {
            enabled = false
            aggregate {
                enabled = false
            }
        }
    }

}


allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://repo1.maven.org/maven2/' }
        maven { url "https://repo.grails.org/grails/core" }
        maven { url 'https://repo.spring.io/release/' }
    }

    license {
        exclude '**/*.json'
        exclude '**/*.yml'
        exclude '**/*.txt'
        exclude '**/*.html'
        exclude '**/*.dtd'
    }
}


subprojects {
    dependencies {
        codenarc "org.codenarc:CodeNarc:${config.quality.codenarc.toolVersion}"
        codenarc "org.codehaus.groovy:groovy-templates:$groovyVersion"
    }
}

gradleProjects {
    subprojects {
        dirs(['libs', 'examples']) { Project subproject ->
            java {
                toolchain {
                    languageVersion.set(JavaLanguageVersion.of(11))
                }
            }

            repositories {
                mavenCentral()
            }

            tasks.withType(JavaCompile) {
                options.encoding = "UTF-8"
                options.compilerArgs.add('-parameters')
            }

            tasks.withType(GroovyCompile) {
                groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
            }
        }

        dirs(['libs', 'platforms', 'kotlin-libs']) {
            mavenPublishing {
                publishToMavenCentral(true)
                signAllPublications()

                pom {
                    name = "Gru"
                    description = 'HTTP Testing Framework'
                    inceptionYear = "2018"
                    url = "https://github.com/${slug}"
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                            distribution = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    developers {
                        developer {
                            id = "musketyr"
                            name = "Vladimir Orany"
                            url = "https://github.com/musketyr/"
                        }
                    }
                    scm {
                        url = "https://github.com/${slug}.git"
                        connection = "scm:git:git://github.com/${slug}.git"
                        developerConnection = "scm:git:ssh://git@github.com/${slug}.git"
                    }
                }
            }

            signing {
                useInMemoryPgpKeys(rootProject.ext.signingInMemoryKey, rootProject.ext.signingInMemoryKeyPassword)
                sign publishing.publications
            }
        }

        dir('libs') {
            processResources {
                filesMatching('**/org.codehaus.groovy.runtime.ExtensionModule') {
                    filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [VERSION: version])
                }
            }

            jar {
                manifest.attributes provider: 'gradle'
            }

            dependencies {
                testImplementation "org.spockframework:spock-core:$spockVersion"
            }

            tasks.withType(Test) {
                useJUnitPlatform()
            }

            project(':gru-bom').dependencies.constraints.api it
        }

        dir ('examples') {
            groovydoc.onlyIf { false }
            config {
                quality {
                    codenarc {
                        enabled = false
                    }
                }
            }
        }

        dir('platforms') {
            // fix for NullPointerException in Kordamp PublishingPlugin
            publishing {
                publications {
                    main(MavenPublication) {
                        pom {
                            properties = [
                                'gru.version': version,
                            ]
                        }
                    }
                }
            }
        }

        dir('kotlin-libs') {
            repositories {
                mavenCentral()
            }

            jar {
                manifest.attributes provider: 'gradle'
            }

            tasks.withType(Test) {
                useJUnitPlatform()
            }

            project(':gru-bom').dependencies.constraints.api it
        }
    }
}
